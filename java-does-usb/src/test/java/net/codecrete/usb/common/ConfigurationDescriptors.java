package net.codecrete.usb.common;

class ConfigurationDescriptors {

    // For convenience, the configuration descriptor are maintained as int arrays.
    private static final int[] SIMPLE_INT_ARRAY = new int[] {
            // configuration descriptor
            0x09,          //  bLength
            0x02,          //  bDescriptorType = configuration
            0x12, 0x00,    //  wTotalLength
            0x01,          //  bNumInterfaces
            0x01,          //  bConfigurationValue
            0x00,          //  iConfiguration
            0x34,          //  bmAttributes
            0x64,          //  bMaxPower

            // interface descriptor
            0x09,          //  bLength
            0x04,          //  bDescriptorType = interface
            0x00,          //  bInterfaceNumber
            0x00,          //  bAlternateSetting
            0x00,          //  bNumEndpoints
            0xff,          //  bInterfaceClass
            0xdd,          //  bInterfaceSubClass
            0xcc,          //  bInterfaceProtocol
            0x00,          //  iInterface
    };

    private static final int[] LARGE_COMPOSITE_INT_ARRAY = new int[] {
            // configuration descriptor
            0x09,        // bLength = 9
            0x02,        // bDescriptorType = configuration
            0x5A, 0x04,  // wTotalLength = 1114
            0x04,        // bNumInterfaces = 4
            0x01,        // bConfigurationValue
            0x00,        // iConfiguration (string index)
            0xA0,        // bmAttributes (remote wakeup)
            0x70,        // bMaxPower = 224mA

            // interface association descriptor (IAD)
            0x08,        // bLength = 9
            0x0B,        // bDescriptorType = iad
            0x00,        // bFirstInterface = 0
            0x03,        // bInterfaceCount = 3
            0x0E,        // bFunctionClass = 0x0E (Video)
            0x03,        // bFunctionSubClass = 0x03 (Video Interface Collection)
            0x00,        // bFunctionProtocol = 0x00 (Undefined)
            0x00,        // iFunction (string index)

            // interface descriptor
            0x09,        // bLength
            0x04,        // bDescriptorType = interface
            0x00,        // bInterfaceNumber = 0
            0x00,        // bAlternateSetting = 0
            0x01,        // bNumEndpoints = 1
            0x0E,        // bInterfaceClass = 0x0E (Video)
            0x01,        // bInterfaceSubClass = 0x01 (Video Control)
            0x00,        // bInterfaceProtocol = 0x00 (Undefined)
            0x00,        // iInterface (string index)

            0x0E,        // bLength = 14
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x01, 0x00, 0x01, 0xA9, 0x00, 0x80, 0xC3, 0xC9, 0x01, 0x02, 0x01, 0x02,

            0x09,        // bLength = 9
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x03, 0x04, 0x01, 0x01, 0x00, 0x02, 0x00,

            0x09,        // bLength = 9
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x03, 0x05, 0x01, 0x01, 0x00, 0x02, 0x00,

            0x1B,        // bLength = 27
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x06, 0x02, 0x6A, 0xD1, 0x49, 0x2C, 0xB8, 0x32, 0x85, 0x44, 0x3E, 0xA8, 0x64, 0x3A, 0x15, 0x23, 0x62, 0xF2, 0x06, 0x01, 0x06, 0x02, 0x3F, 0x00, 0x00,

            0x1B,        // bLength = 27
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x06, 0x06, 0xD0, 0x9E, 0xE4, 0x23, 0x78, 0x11, 0x31, 0x4F, 0xAE, 0x52, 0xD2, 0xFB, 0x8A, 0x8D, 0x3B, 0x48, 0x05, 0x01, 0x03, 0x02, 0xFF, 0x7F, 0x00,

            0x1B,        // bLength = 27
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x06, 0x0F, 0xDC, 0x95, 0x3F, 0x0F, 0x32, 0x26, 0x4E, 0x4C, 0x92, 0xC9, 0xA0, 0x47, 0x82, 0xF4, 0x3B, 0xC8, 0x02, 0x01, 0x03, 0x02, 0x20, 0x01, 0x00,

            0x1D,        // bLength = 29
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x06, 0x0E, 0xF2, 0x5D, 0xBD, 0xA8, 0x98, 0x1A, 0x4E, 0x47, 0x8D, 0xD0, 0xD9, 0x26, 0x72, 0xD1, 0x94, 0xFA, 0x02, 0x01, 0x03, 0x04, 0xFF, 0xF3, 0xF3, 0xFF, 0x00,

            0x12,        // bLength = 18
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x02, 0x01, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x2E, 0x0A, 0x02,

            0x0B,        // bLength = 11
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x05, 0x03, 0x01, 0x00, 0x00, 0x02, 0x5B, 0x17, 0x00,

            // endpoint descriptor
            0x07,        // bLength = 7
            0x05,        // bDescriptorType = endpoint
            0x85,        // bEndpointAddress (IN)
            0x03,        // bmAttributes (interrupt)
            0x40, 0x00,  // wMaxPacketSize = 64
            0x08,        // bInterval = 8

            0x06,        // bLength = 6
            0x30,        // bDescriptorType = 0x30 (video)
            0x00, 0x00, 0x08, 0x00,

            0x05,        // bLength = 5
            0x25,        // bDescriptorType = 0x25 (CS_ENDPOINT)
            0x03, 0x40, 0x00,

            // interface descriptor
            0x09,        // bLength = 9
            0x04,        // bDescriptorType = interface
            0x01,        // bInterfaceNumber = 1
            0x00,        // bAlternateSetting = 0
            0x00,        // bNumEndpoints = 0
            0x0E,        // bInterfaceClass = 0x0E (Video)
            0x02,        // bInterfaceSubClass = 0x02 (Video Streaming)
            0x00,        // bInterfaceProtocol = 0x00 (Undefined)
            0x00,        // iInterface (string index)

            0x10,        // bLength = 16
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x01, 0x03, 0xD9, 0x02, 0x81, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,

            0x1B,        // bLength = 27
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x04, 0x01, 0x06, 0x59, 0x55, 0x59, 0x32, 0x00, 0x00, 0x10, 0x00, 0x80, 0x00, 0x00, 0xAA, 0x00, 0x38, 0x9B, 0x71, 0x10, 0x01, 0x00, 0x00, 0x00, 0x00,

            0x1E,        // bLength = 30
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x05, 0x01, 0x00, 0x80, 0x02, 0xE0, 0x01, 0x00, 0x00, 0xCA, 0x08, 0x00, 0x00, 0xCA, 0x08, 0x00, 0x60, 0x09, 0x00, 0x15, 0x16, 0x05, 0x00, 0x01, 0x15, 0x16, 0x05, 0x00,

            0x1E,        // bLength = 30
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x05, 0x02, 0x00, 0x80, 0x02, 0x68, 0x01, 0x00, 0x80, 0x97, 0x06, 0x00, 0x80, 0x97, 0x06, 0x00, 0x08, 0x07, 0x00, 0x15, 0x16, 0x05, 0x00, 0x01, 0x15, 0x16, 0x05, 0x00,

            0x1E,        // bLength = 30
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x05, 0x03, 0x00, 0x00, 0x05, 0xD0, 0x02, 0x00, 0x00, 0x18, 0x15, 0x00, 0x00, 0x18, 0x15, 0x00, 0x20, 0x1C, 0x00, 0x9A, 0x5B, 0x06, 0x00, 0x01, 0x9A, 0x5B, 0x06, 0x00,

            0x1E,        // bLength = 30
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x05, 0x04, 0x00, 0x00, 0x05, 0xD0, 0x02, 0x00, 0x00, 0x5E, 0x1A, 0x00, 0x00, 0x5E, 0x1A, 0x00, 0x20, 0x1C, 0x00, 0x15, 0x16, 0x05, 0x00, 0x01, 0x15, 0x16, 0x05, 0x00,

            0x1E,        // bLength = 30
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x05, 0x05, 0x00, 0x80, 0x07, 0x38, 0x04, 0x00, 0x00, 0x76, 0x2F, 0x00, 0x00, 0x76, 0x2F, 0x00, 0x48, 0x3F, 0x00, 0x9A, 0x5B, 0x06, 0x00, 0x01, 0x9A, 0x5B, 0x06, 0x00,

            0x1E,        // bLength = 30
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x05, 0x06, 0x00, 0x80, 0x07, 0x38, 0x04, 0x00, 0x80, 0x53, 0x3B, 0x00, 0x80, 0x53, 0x3B, 0x00, 0x48, 0x3F, 0x00, 0x15, 0x16, 0x05, 0x00, 0x01, 0x15, 0x16, 0x05, 0x00,

            0x06,        // bLength = 6
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x0D, 0x01, 0x01, 0x04,

            0x0B,        // bLength = 11
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x06, 0x02, 0x0B, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,

            0x1E,        // bLength = 30
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x07, 0x01, 0x00, 0x80, 0x02, 0xE0, 0x01, 0x00, 0x40, 0x38, 0x00, 0x00, 0x00, 0xA0, 0x05, 0x00, 0x00, 0x10, 0x00, 0x15, 0x16, 0x05, 0x00, 0x01, 0x15, 0x16, 0x05, 0x00,

            0x1E,        // bLength = 30
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x07, 0x02, 0x00, 0x00, 0x05, 0xD0, 0x02, 0x00, 0x00, 0x2D, 0x00, 0x00, 0x00, 0x80, 0x04, 0x00, 0x00, 0x10, 0x00, 0x9A, 0x5B, 0x06, 0x00, 0x01, 0x9A, 0x5B, 0x06, 0x00,

            0x1E,        // bLength = 30
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x07, 0x03, 0x00, 0x00, 0x05, 0xD0, 0x02, 0x00, 0x40, 0x38, 0x00, 0x00, 0x00, 0xA0, 0x05, 0x00, 0x00, 0x10, 0x00, 0x15, 0x16, 0x05, 0x00, 0x01, 0x15, 0x16, 0x05, 0x00,

            0x1E,        // bLength = 30
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x07, 0x04, 0x00, 0x00, 0x05, 0xD0, 0x02, 0x00, 0x80, 0x70, 0x00, 0x00, 0x00, 0x40, 0x0B, 0x00, 0x00, 0x10, 0x00, 0x0A, 0x8B, 0x02, 0x00, 0x01, 0x0A, 0x8B, 0x02, 0x00,

            0x1E,        // bLength = 30
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x07, 0x05, 0x00, 0x80, 0x07, 0x38, 0x04, 0x00, 0x00, 0x2D, 0x00, 0x00, 0x00, 0x80, 0x04, 0x00, 0x00, 0x10, 0x00, 0x9A, 0x5B, 0x06, 0x00, 0x01, 0x9A, 0x5B, 0x06, 0x00,

            0x1E,        // bLength = 30
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x07, 0x06, 0x00, 0x80, 0x07, 0x38, 0x04, 0x00, 0x40, 0x38, 0x00, 0x00, 0x00, 0xA0, 0x05, 0x00, 0x00, 0x10, 0x00, 0x15, 0x16, 0x05, 0x00, 0x01, 0x15, 0x16, 0x05, 0x00,

            0x1E,        // bLength = 30
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x07, 0x07, 0x00, 0x80, 0x07, 0x38, 0x04, 0x00, 0x80, 0x70, 0x00, 0x00, 0x00, 0x40, 0x0B, 0x00, 0x00, 0x10, 0x00, 0x0A, 0x8B, 0x02, 0x00, 0x01, 0x0A, 0x8B, 0x02, 0x00,

            0x1E,        // bLength = 30
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x07, 0x08, 0x00, 0x00, 0x0A, 0xA0, 0x05, 0x00, 0x00, 0x2D, 0x00, 0x00, 0x00, 0x80, 0x04, 0x00, 0x00, 0x10, 0x00, 0x9A, 0x5B, 0x06, 0x00, 0x01, 0x9A, 0x5B, 0x06, 0x00,

            0x1E,        // bLength = 30
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x07, 0x09, 0x00, 0x00, 0x0A, 0xA0, 0x05, 0x00, 0x40, 0x38, 0x00, 0x00, 0x00, 0xA0, 0x05, 0x00, 0x00, 0x10, 0x00, 0x15, 0x16, 0x05, 0x00, 0x01, 0x15, 0x16, 0x05, 0x00,

            0x1E,        // bLength = 30
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x07, 0x0A, 0x00, 0x00, 0x0F, 0x70, 0x08, 0x00, 0x00, 0x2D, 0x00, 0x00, 0x00, 0x80, 0x04, 0x00, 0x00, 0x10, 0x00, 0x9A, 0x5B, 0x06, 0x00, 0x01, 0x9A, 0x5B, 0x06, 0x00,

            0x1E,        // bLength = 30
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x07, 0x0B, 0x00, 0x00, 0x0F, 0x70, 0x08, 0x00, 0x40, 0x38, 0x00, 0x00, 0x00, 0xA0, 0x05, 0x00, 0x00, 0x10, 0x00, 0x15, 0x16, 0x05, 0x00, 0x01, 0x15, 0x16, 0x05, 0x00,

            0x06,        // bLength = 6
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x0D, 0x01, 0x01, 0x04,

            0x1B,        // bLength = 27
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x04, 0x03, 0x04, 0x4E, 0x56, 0x31, 0x32, 0x00, 0x00, 0x10, 0x00, 0x80, 0x00, 0x00, 0xAA, 0x00, 0x38, 0x9B, 0x71, 0x0C, 0x01, 0x00, 0x00, 0x00, 0x00,

            0x1E,        // bLength = 30
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x05, 0x01, 0x00, 0x80, 0x02, 0xE0, 0x01, 0x00, 0x80, 0x97, 0x06, 0x00, 0x80, 0x97, 0x06, 0x00, 0x08, 0x07, 0x00, 0x15, 0x16, 0x05, 0x00, 0x01, 0x15, 0x16, 0x05, 0x00,

            0x1E,        // bLength = 30
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x05, 0x02, 0x00, 0x80, 0x02, 0x68, 0x01, 0x00, 0xA0, 0xF1, 0x04, 0x00, 0xA0, 0xF1, 0x04, 0x00, 0x46, 0x05, 0x00, 0x15, 0x16, 0x05, 0x00, 0x01, 0x15, 0x16, 0x05, 0x00,

            0x1E,        // bLength = 30
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x05, 0x03, 0x00, 0x00, 0x05, 0xD0, 0x02, 0x00, 0x80, 0xC6, 0x13, 0x00, 0x80, 0xC6, 0x13, 0x00, 0x18, 0x15, 0x00, 0x15, 0x16, 0x05, 0x00, 0x01, 0x15, 0x16, 0x05, 0x00,

            0x1E,        // bLength = 30
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x05, 0x04, 0x00, 0x80, 0x07, 0x38, 0x04, 0x00, 0xA0, 0x7E, 0x2C, 0x00, 0xA0, 0x7E, 0x2C, 0x00, 0x76, 0x2F, 0x00, 0x15, 0x16, 0x05, 0x00, 0x01, 0x15, 0x16, 0x05, 0x00,

            0x06,        // bLength = 6
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x0D, 0x01, 0x01, 0x04,

            // interface descriptor
            0x09,        // bLength = 9
            0x04,        // bDescriptorType = interface
            0x01,        // bInterfaceNumber = 1
            0x01,        // bAlternateSetting = 1
            0x01,        // bNumEndpoints = 1
            0x0E,        // bInterfaceClass = 0x0E (Video)
            0x02,        // bInterfaceSubClass = 0x02 (Video Streaming)
            0x00,        // bInterfaceProtocol = 0x00 (Undefined)
            0x00,        // iInterface (string index)

            // endpoint descriptor
            0x07,        // bLength = 7
            0x05,        // bDescriptorType = endpoint
            0x81,        // bEndpointAddress (IN)
            0x05,        // bmAttributes (isochronous, async, data)
            0x00, 0x04,  // wMaxPacketSize = 1024
            0x01,        // bInterval = 1

            0x06,        // bLength = 6
            0x30,        // bDescriptorType = superspeed endpoint companion
            0x05,        // bMaxBurst = 5
            0x02,        // bmAttributes.isochronous.mult = 2
            0x00, 0x48,  // wBytesPerInterval = 18432

            // interface descriptor
            0x09,        // bLength = 9
            0x04,        // bDescriptorType = interface
            0x02,        // bInterfaceNumber = 2
            0x00,        // bAlternateSetting = 0
            0x00,        // bNumEndpoints = 0
            0x0E,        // bInterfaceClass = 0x0E (Video)
            0x02,        // bInterfaceSubClass = 0x02 (Video Streaming)
            0x00,        // bInterfaceProtocol = 0x00 (Undefined)
            0x00,        // iInterface (string index)

            0x0E,        // bLength = 14
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x01, 0x01, 0x4D, 0x00, 0x82, 0x00, 0x05, 0x00, 0x00, 0x00, 0x01, 0x00,

            0x1B,        // bLength = 27
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x04, 0x03, 0x01, 0x4E, 0x56, 0x31, 0x32, 0x00, 0x00, 0x10, 0x00, 0x80, 0x00, 0x00, 0xAA, 0x00, 0x38, 0x9B, 0x71, 0x0C, 0x01, 0x00, 0x00, 0x00, 0x00,

            0x1E,        // bLength = 30
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x05, 0x01, 0x00, 0x80, 0x02, 0xE0, 0x01, 0x00, 0x80, 0x97, 0x06, 0x00, 0x80, 0x97, 0x06, 0x00, 0x08, 0x07, 0x00, 0x15, 0x16, 0x05, 0x00, 0x01, 0x15, 0x16, 0x05, 0x00,

            0x06,        // bLength = 6
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x0D, 0x01, 0x01, 0x04,

            // interface descriptor
            0x09,        // bLength = 9
            0x04,        // bDescriptorType = interface
            0x02,        // bInterfaceNumber = 2
            0x01,        // bAlternateSetting = 1
            0x01,        // bNumEndpoints = 1
            0x0E,        // bInterfaceClass = 0x0E (Video)
            0x02,        // bInterfaceSubClass = 0x02 (Video Streaming)
            0x00,        // bInterfaceProtocol = 0x00 (Undefined)
            0x00,        // iInterface (string index)

            // endpoint descriptor
            0x07,        // bLength = 7
            0x05,        // bDescriptorType = endpoint
            0x82,        // bEndpointAddress (IN)
            0x05,        // bmAttributes (isochronous, async, data)
            0x00, 0x04,  // wMaxPacketSize = 1024
            0x01,        // bInterval = 1

            0x06,        // bLength = 6
            0x30,        // bDescriptorType = superspeed endpoint companion
            0x00,        // bMaxBurst = 0
            0x02,        // bmAttributes.isochronous.mult = 2
            0x00, 0x0C,  // wBytesPerInterval = 3072

            // interface descriptor
            0x09,        // bLength = 9
            0x04,        // bDescriptorType = interface
            0x03,        // bInterfaceNumber = 3
            0x00,        // bAlternateSetting = 0
            0x01,        // bNumEndpoints = 1
            0x03,        // bInterfaceClass = 0x03 (HID)
            0x00,        // bInterfaceSubClass = 0x00 (No Subclass)
            0x00,        // bInterfaceProtocol = 0x00 (None)
            0x00,        // iInterface (string index)

            // HID descriptor
            0x09,        // bLength = 9
            0x21,        // bDescriptorType = 0x21 (HID)
            0x10, 0x01,  // bcdHID = 1.10
            0x00,        // bCountryCode = 0 (not localized)
            0x01,        // bNumDescriptors = 1
            0x22,        // bDescriptorType = 0x22 (report)
            0x46, 0x02,  // wDescriptorLength = 582

            // endpoint descriptor
            0x07,        // bLength = 7
            0x05,        // bDescriptorType = endpoint
            0x84,        // bEndpointAddress (IN)
            0x03,        // bmAttributes (interrupt)
            0x40, 0x00,  // wMaxPacketSize = 64
            0x0A,        // bInterval = 10

            0x06,        // bLength = 6
            0x30,        // bDescriptorType = superspeed endpoint companion
            0x00,        // bMaxBurst = 0
            0x00,        // bmAttributes = 0
            0x40, 0x00   // wBytesPerInterval = 64
    };
    
    private static final int[] COMPOSITE_TEST_DEVICE_INT_ARRAY = new int[] {
            // configuration descriptor
            0x09,        // bLength = 9
            0x02,        // bDescriptorType = configuration
            0x73, 0x00,  // wTotalLength = 115
            0x04,        // bNumInterfaces = 4
            0x01,        // bConfigurationValue = 1
            0x00,        // iConfiguration (string index)
            0x80,        // bmAttributes = bus powered
            0xFA,        // bMaxPower = 500mA

            // interface association descriptor (IAD)
            0x08,        // bLength = 8
            0x0B,        // bDescriptorType = iad
            0x00,        // bFirstInterface = 0
            0x02,        // bInterfaceCount = 2
            0x02,        // bFunctionClass = 2 (Communications)
            0x02,        // bFunctionSubClass = 2 (Abstract)
            0x00,        // bFunctionProtocol = 0 (None)
            0x00,        // iFunction (string index)

            // interface descriptor
            0x09,        // bLength = 9
            0x04,        // bDescriptorType = interface
            0x00,        // bInterfaceNumber = 0
            0x00,        // bAlternateSetting = 0
            0x01,        // bNumEndpoints = 1
            0x02,        // bInterfaceClass = 2 (Communications)
            0x02,        // bInterfaceSubClass = 2 (Abstract)
            0x00,        // bInterfaceProtocol = 0 (None)
            0x00,        // iInterface (string index)

            // CDC header functional descriptor
            0x05,        // bLength = 5
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x00,        // bDescriptorSubtype = 0 (Header)
            0x20,  0x01, // bcdCDC = 1.20

            // CDC call management functional descriptor
            0x05,        // bLength = 5
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x01,        // bDescriptorSubtype = 1 (Call Management)
            0x00,        // bmCapabilities = 0 (None)
            0x01,        // bDataInterface = 1 (Data Class Interface 1)

            // CDC abstract control management functional descriptor
            0x04,        // bLength = 4
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x02,        // bDescriptorSubtype = 2 (Abstract Control Management)
            0x02,        // bmCapabilities = 2 (Line Coding and Serial State)

            // CDC union functional descriptor
            0x05,        // bLength = 5
            0x24,        // bDescriptorType = 0x24 (CS_INTERFACE)
            0x06,        // bDescriptorSubtype = 6 (Union)
            0x00,        // bMasterInterface = 0 (Communications Class Interface 0)
            0x01,        // bSlaveInterface0 = 1 (Data Class Interface 1)

            // endpoint descriptor
            0x07,        // bLength = 7
            0x05,        // bDescriptorType = endpoint
            0x83,        // bEndpointAddress (IN)
            0x03,        // bmAttributes (interrupt)
            0x08, 0x00,  // wMaxPacketSize = 8
            0x10,        // bInterval = 16

            // interface descriptor
            0x09,        // bLength = 9
            0x04,        // bDescriptorType = interface
            0x01,        // bInterfaceNumber = 1
            0x00,        // bAlternateSetting = 0
            0x02,        // bNumEndpoints = 2
            0x0A,        // bInterfaceClass = 0x0A (CDC Data)
            0x00,        // bInterfaceSubClass = 0 (None)
            0x00,        // bInterfaceProtocol = 0 (None)
            0x00,        // iInterface (string index)

            // endpoint descriptor
            0x07,        // bLength = 7
            0x05,        // bDescriptorType = endpoint
            0x02,        // bEndpointAddress (OUT)
            0x02,        // bmAttributes (bulk)
            0x40, 0x00,  // wMaxPacketSize = 64
            0x00,        // bInterval = 0

            // endpoint descriptor
            0x07,        // bLength = 7
            0x05,        // bDescriptorType = endpoint
            0x81,        // bEndpointAddress (IN)
            0x02,        // bmAttributes (Bulk)
            0x40, 0x00,  // wMaxPacketSize = 64
            0x00,        // bInterval = 0

            // interface association descriptor (IAD)
            0x08,        // bLength = 8
            0x0B,        // bDescriptorType = iad
            0x02,        // bFirstInterface = 2
            0x02,        // bInterfaceCount = 2
            0xFF,        // bFunctionClass = 0xFF (Vendor Specific)
            0x00,        // bFunctionSubClass = 0 (None)
            0x00,        // bFunctionProtocol = 0 (None)
            0x04,        // iFunction (string index)

            // interface descriptor
            0x09,        // bLength = 9
            0x04,        // bDescriptorType = interface
            0x02,        // bInterfaceNumber = 2
            0x00,        // bAlternateSetting = 0
            0x00,        // bNumEndpoints = 0
            0xFF,        // bInterfaceClass = 0xFF (Vendor Specific)
            0x00,        // bInterfaceSubClass = 0 (None)
            0x00,        // bInterfaceProtocol = 0 (None)
            0x00,        // iInterface (string index)

            // interface descriptor
            0x09,        // bLength = 9
            0x04,        // bDescriptorType = interface
            0x03,        // bInterfaceNumber = 3
            0x00,        // bAlternateSetting = 0
            0x02,        // bNumEndpoints = 2
            0xFF,        // bInterfaceClass = 0xFF (Vendor Specific)
            0x00,        // bInterfaceSubClass = 0 (None)
            0x00,        // bInterfaceProtocol = 0 (None)
            0x00,        // iInterface (string index)

            // endpoint descriptor
            0x07,        // bLength = 7
            0x05,        // bDescriptorType = endpoint
            0x01,        // bEndpointAddress (OUT)
            0x02,        // bmAttributes (Bulk)
            0x40, 0x00,  // wMaxPacketSize = 64
            0x00,        // bInterval = 0

            // endpoint descriptor
            0x07,        // bLength = 7
            0x05,        // bDescriptorType = endpoint
            0x82,        // bEndpointAddress (IN)
            0x02,        // bmAttributes (Bulk)
            0x40, 0x00,  // wMaxPacketSize = 64
            0x00,        // bInterval = 0
    };

    static final byte[] SIMPLE;

    static final byte[] COMPOSITE_LARGE;

    static final byte[] COMPOSITE_TEST_DEVICE;

    static {
        SIMPLE = new byte[SIMPLE_INT_ARRAY.length];
        for (int i = 0; i < SIMPLE_INT_ARRAY.length; i++)
            SIMPLE[i] = (byte) SIMPLE_INT_ARRAY[i];

        COMPOSITE_LARGE = new byte[LARGE_COMPOSITE_INT_ARRAY.length];
        for (int i = 0; i < LARGE_COMPOSITE_INT_ARRAY.length; i++)
            COMPOSITE_LARGE[i] = (byte) LARGE_COMPOSITE_INT_ARRAY[i];

        COMPOSITE_TEST_DEVICE = new byte[COMPOSITE_TEST_DEVICE_INT_ARRAY.length];
        for (int i = 0; i < COMPOSITE_TEST_DEVICE_INT_ARRAY.length; i++)
            COMPOSITE_TEST_DEVICE[i] = (byte) COMPOSITE_TEST_DEVICE_INT_ARRAY[i];
    }
}
