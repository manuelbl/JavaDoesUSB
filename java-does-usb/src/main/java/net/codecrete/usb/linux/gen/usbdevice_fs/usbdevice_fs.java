// Generated by jextract

package net.codecrete.usb.linux.gen.usbdevice_fs;

import java.lang.invoke.*;
import java.lang.foreign.*;
import java.nio.ByteOrder;
import java.util.*;
import java.util.function.*;
import java.util.stream.*;

import static java.lang.foreign.ValueLayout.*;
import static java.lang.foreign.MemoryLayout.PathElement.*;

public class usbdevice_fs extends usbdevice_fs$shared {

    usbdevice_fs() {
        // Should not be called directly
    }

    static final Arena LIBRARY_ARENA = Arena.ofAuto();

    static final SymbolLookup SYMBOL_LOOKUP = SymbolLookup.loaderLookup()
            .or(Linker.nativeLinker().defaultLookup());

    private static final int USBDEVFS_URB_TYPE_ISO = (int)0L;
    /**
     * {@snippet lang=c :
     * #define USBDEVFS_URB_TYPE_ISO 0
     * }
     */
    public static int USBDEVFS_URB_TYPE_ISO() {
        return USBDEVFS_URB_TYPE_ISO;
    }
    private static final int USBDEVFS_URB_TYPE_INTERRUPT = (int)1L;
    /**
     * {@snippet lang=c :
     * #define USBDEVFS_URB_TYPE_INTERRUPT 1
     * }
     */
    public static int USBDEVFS_URB_TYPE_INTERRUPT() {
        return USBDEVFS_URB_TYPE_INTERRUPT;
    }
    private static final int USBDEVFS_URB_TYPE_CONTROL = (int)2L;
    /**
     * {@snippet lang=c :
     * #define USBDEVFS_URB_TYPE_CONTROL 2
     * }
     */
    public static int USBDEVFS_URB_TYPE_CONTROL() {
        return USBDEVFS_URB_TYPE_CONTROL;
    }
    private static final int USBDEVFS_URB_TYPE_BULK = (int)3L;
    /**
     * {@snippet lang=c :
     * #define USBDEVFS_URB_TYPE_BULK 3
     * }
     */
    public static int USBDEVFS_URB_TYPE_BULK() {
        return USBDEVFS_URB_TYPE_BULK;
    }
    private static final int USBDEVFS_DISCONNECT_CLAIM_EXCEPT_DRIVER = (int)2L;
    /**
     * {@snippet lang=c :
     * #define USBDEVFS_DISCONNECT_CLAIM_EXCEPT_DRIVER 2
     * }
     */
    public static int USBDEVFS_DISCONNECT_CLAIM_EXCEPT_DRIVER() {
        return USBDEVFS_DISCONNECT_CLAIM_EXCEPT_DRIVER;
    }
}

