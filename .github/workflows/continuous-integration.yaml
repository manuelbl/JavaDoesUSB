name: Continuous Integration

on:
  push:
    paths-ignore:
      - "test-devices/**"
      - "reference/**"
  pull_request:
    paths-ignore:
      - "test-devices/**"
      - "reference/**"


env:
  MAVEN_ARGS: -B -V -ntp -e -Djansi.passthrough=true -Dstyle.color=always

jobs:

  test_os:
    name: OS ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '21'
          cache: 'maven'
      - name: Configure GPG key
        run: |
          echo -n "$GPG_SIGNING_KEY" | base64 --decode | gpg --import
        env:
          GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}
        shell: bash
      - name: Build java-does-usb
        run: ./mvnw $MAVEN_ARGS -DskipTests clean install javadoc:javadoc
        working-directory: ./java-does-usb
      - name: Example "bulk_transfer"
        run: ./mvnw $MAVEN_ARGS clean compile
        working-directory: ./examples/bulk_transfer
      - name: Example "enumerate"
        run: ./mvnw $MAVEN_ARGS clean compile
        working-directory: ./examples/enumerate
      - name: Example "enumerate" (Kotlin)
        run: ./mvnw $MAVEN_ARGS clean package
        working-directory: ./examples/enumerate_kotlin
      - name: Example "monitor"
        run: ./mvnw $MAVEN_ARGS clean compile
        working-directory: ./examples/monitor
      - name: Example "monitor" (Kotlin)
        run: ./mvnw $MAVEN_ARGS clean package
        working-directory: ./examples/monitor_kotlin
      - name: Example "stm_dfu"
        run: ./mvnw $MAVEN_ARGS clean compile
        working-directory: ./examples/stm_dfu
      - name: Example "epaper_display"
        run: ./mvnw $MAVEN_ARGS clean compile
        working-directory: ./examples/epaper_display
